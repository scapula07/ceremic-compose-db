import type { CustomRuntimeScalarType, JSONSchema } from '@composedb/types';
import { GraphQLScalarType } from 'graphql';
import type { ScalarSchema } from '../types.js';
export declare type ScalarTitle = 'CeramicCommitID' | 'GraphQLCountryCode' | 'GraphQLDate' | 'GraphQLDateTime' | 'GraphQLDID' | 'GraphQLID' | 'CeramicStreamID' | 'GraphQLTime';
declare type ScalarWithTitle = ScalarSchema & {
    title: ScalarTitle;
};
declare type StringScalarWithTile = JSONSchema.String & {
    title: ScalarTitle;
};
export declare const SCALAR_RUNTIME_TYPES: Record<ScalarTitle, CustomRuntimeScalarType>;
export declare function getGraphQLScalarSchema(type: CustomRuntimeScalarType): StringScalarWithTile;
export declare const extraScalars: Record<string, ScalarWithTitle>;
declare const scalars: Record<string, ScalarSchema>;
export declare type SupportedScalarName = keyof typeof scalars;
export declare function getScalarSchema(scalar: GraphQLScalarType | string): ScalarSchema;
export declare function isCommonScalar(schema: ScalarSchema): boolean;
export {};
