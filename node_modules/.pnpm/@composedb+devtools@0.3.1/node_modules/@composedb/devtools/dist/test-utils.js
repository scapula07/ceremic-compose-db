import { createAbstractCompositeDefinition } from './schema/compiler.js';
/** @internal */ export function mockDefinition(definition, providedModels = {}) {
    const models = {};
    const modelsViews = {};
    for (const abstractModel of Object.values(definition.models)){
        if (abstractModel.action === 'create') {
            const definition1 = abstractModel.model;
            models[`${definition1.name}ID`] = definition1;
        } else {
            const definition2 = providedModels[abstractModel.id];
            if (definition2 == null) {
                throw new Error(`Missing provided model ${abstractModel.id}`);
            }
            models[abstractModel.id] = definition2;
            modelsViews[abstractModel.id] = abstractModel.views;
        }
    }
    return {
        version: '1.0',
        commonEmbeds: definition.commonEmbeds,
        models,
        views: {
            models: modelsViews
        }
    };
}
/** @internal */ export function mockDefinitionFromSchema(schema, providedModels) {
    return mockDefinition(createAbstractCompositeDefinition(schema), providedModels);
}
