import { fetchJson } from '@ceramicnetwork/common';
import { StreamID } from '@ceramicnetwork/streamid';
export class RemoteAdminApi {
    constructor(_apiUrl, _getDidFn) {
        this._apiUrl = _apiUrl;
        this._getDidFn = _getDidFn;
        this._fetchJson = fetchJson;
        this.modelsPath = './admin/models';
        this.getCodePath = './admin/getCode';
    }
    getCodeUrl() {
        return new URL(this.getCodePath, this._apiUrl);
    }
    getModelsUrl() {
        return new URL(this.modelsPath, this._apiUrl);
    }
    async buildJWS(actingDid, code, modelsIDs) {
        const body = modelsIDs
            ? { models: modelsIDs.map((streamID) => streamID.toString()) }
            : undefined;
        const jws = await actingDid.createJWS({
            code: code,
            requestPath: this.getModelsUrl().pathname,
            requestBody: body,
        });
        return `${jws.signatures[0].protected}.${jws.payload}.${jws.signatures[0].signature}`;
    }
    async generateCode() {
        return (await this._fetchJson(this.getCodeUrl())).code;
    }
    async startIndexingModels(modelsIDs) {
        const code = await this.generateCode();
        await this._fetchJson(this.getModelsUrl(), {
            method: 'post',
            body: { jws: await this.buildJWS(this._getDidFn(), code, modelsIDs) },
        });
    }
    async getIndexedModels() {
        const code = await this.generateCode();
        const response = await this._fetchJson(this.getModelsUrl(), {
            headers: { Authorization: `Basic ${await this.buildJWS(this._getDidFn(), code)}` },
        });
        return response.models.map((modelStreamIDString) => {
            return StreamID.fromString(modelStreamIDString);
        });
    }
    async stopIndexingModels(modelsIDs) {
        const code = await this.generateCode();
        await this._fetchJson(this.getModelsUrl(), {
            method: 'delete',
            body: { jws: await this.buildJWS(this._getDidFn(), code, modelsIDs) },
        });
    }
}
//# sourceMappingURL=remote-admin-api.js.map