import type { BaseQuery, CeramicApi, Page, PaginationQuery, StreamState } from '@ceramicnetwork/common';
import { ModelInstanceDocument } from '@ceramicnetwork/stream-model-instance';
import type { Connection, ConnectionArguments } from 'graphql-relay';
export declare type ConnectionQuery = BaseQuery & ConnectionArguments;
export declare function toBaseQuery(source: BaseQuery): BaseQuery;
export declare function toPaginationQuery(source: ConnectionQuery): PaginationQuery;
export declare function toRelayConnection(ceramic: CeramicApi, page: Page<StreamState | null>): Connection<ModelInstanceDocument | null>;
export declare function queryConnection(ceramic: CeramicApi, query: ConnectionQuery): Promise<Connection<ModelInstanceDocument | null>>;
export declare function querySingle(ceramic: CeramicApi, query: BaseQuery): Promise<ModelInstanceDocument | null>;
